# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Deploy

on: workflow_dispatch

jobs:

  Docker:
    runs-on: ubuntu-latest
    steps:
    - name: Git variables
      id: extract_branch
      shell: bash
      run: |
        echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        echo "::set-output name=sha_short::$(echo $GITHUB_SHA | cut -c1-7)"
    - name: Check outputs
      run: | 
        echo ${{ steps.extract_branch.outputs.branch }}
        echo ${{ steps.extract_branch.outputs.sha_short }}
    - name: Get Time
      id: time
      uses: nanzm/get-time-action@v1.1
      with:
        timeZone: 8
        format: 'YYYYMMDDHHmm'
    - name: Checkout
      uses: actions/checkout@v2
   
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: sa-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        IMAGE_TAG: tax-engine-facturante-${{ steps.extract_branch.outputs.sha_short }}-${{ steps.time.outputs.time }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    - name: Log out of Amazon ECR
      if: always()
      run: docker logout ${{ steps.login-ecr.outputs.registry }}
